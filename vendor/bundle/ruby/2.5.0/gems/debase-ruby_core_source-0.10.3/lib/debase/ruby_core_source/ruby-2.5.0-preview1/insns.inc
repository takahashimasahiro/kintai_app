/** -*-c-*-
  This file contains YARV instructions list.

  ----
  This file is auto generated by insns2vm.rb
  DO NOT TOUCH!

  If you want to fix something, you must edit 'template/insns.inc.tmpl'
  or tool/insns2vm.rb
 */


/* BIN : Basic Instruction Name */
#define BIN(n) YARVINSN_##n

enum ruby_vminsn_type {
    BIN(nop),
    BIN(getlocal),
    BIN(setlocal),
    BIN(getspecial),
    BIN(setspecial),
    BIN(getinstancevariable),
    BIN(setinstancevariable),
    BIN(getclassvariable),
    BIN(setclassvariable),
    BIN(getconstant),
    BIN(setconstant),
    BIN(getglobal),
    BIN(setglobal),
    BIN(putnil),
    BIN(putself),
    BIN(putobject),
    BIN(putspecialobject),
    BIN(putiseq),
    BIN(putstring),
    BIN(concatstrings),
    BIN(tostring),
    BIN(freezestring),
    BIN(toregexp),
    BIN(intern),
    BIN(newarray),
    BIN(duparray),
    BIN(expandarray),
    BIN(concatarray),
    BIN(splatarray),
    BIN(newhash),
    BIN(newrange),
    BIN(pop),
    BIN(dup),
    BIN(dupn),
    BIN(swap),
    BIN(reverse),
    BIN(reput),
    BIN(topn),
    BIN(setn),
    BIN(adjuststack),
    BIN(defined),
    BIN(checkmatch),
    BIN(checkkeyword),
    BIN(trace),
    BIN(trace2),
    BIN(defineclass),
    BIN(send),
    BIN(opt_str_freeze),
    BIN(opt_str_uminus),
    BIN(opt_newarray_max),
    BIN(opt_newarray_min),
    BIN(opt_send_without_block),
    BIN(invokesuper),
    BIN(invokeblock),
    BIN(leave),
    BIN(throw),
    BIN(jump),
    BIN(branchif),
    BIN(branchunless),
    BIN(branchnil),
    BIN(branchiftype),
    BIN(getinlinecache),
    BIN(setinlinecache),
    BIN(once),
    BIN(opt_case_dispatch),
    BIN(opt_plus),
    BIN(opt_minus),
    BIN(opt_mult),
    BIN(opt_div),
    BIN(opt_mod),
    BIN(opt_eq),
    BIN(opt_neq),
    BIN(opt_lt),
    BIN(opt_le),
    BIN(opt_gt),
    BIN(opt_ge),
    BIN(opt_ltlt),
    BIN(opt_aref),
    BIN(opt_aset),
    BIN(opt_aset_with),
    BIN(opt_aref_with),
    BIN(opt_length),
    BIN(opt_size),
    BIN(opt_empty_p),
    BIN(opt_succ),
    BIN(opt_not),
    BIN(opt_regexpmatch1),
    BIN(opt_regexpmatch2),
    BIN(opt_call_c_function),
    BIN(bitblt),
    BIN(answer),
    BIN(getlocal_OP__WC__0),
    BIN(getlocal_OP__WC__1),
    BIN(setlocal_OP__WC__0),
    BIN(setlocal_OP__WC__1),
    BIN(putobject_OP_INT2FIX_O_0_C_),
    BIN(putobject_OP_INT2FIX_O_1_C_),
    VM_INSTRUCTION_SIZE
};

#define ASSERT_VM_INSTRUCTION_SIZE(array) \
    STATIC_ASSERT(numberof_##array, numberof(array) == VM_INSTRUCTION_SIZE)
